// // 关于堆栈内存问
// // 问题1：
// let a={}, b='0', c=0;  
// a[b]='珠峰';  //给a['0'] 赋值
// a[c]='培训';  //给a[0] 赋值 ，1.数字属性名 和 字符串属性名相等  2.同一个对象属性名不能重复
// console.log(a[b]);    //答案：培训

// // 对于引用类型的处理方案都是基于堆内存来处理的
// // 简单理解为：
// // 堆内存：用来存储引用类型值的空间； 栈内存：用来存储基本类型值 和 指定代码的空间环境
// // 堆内存一般是16进制的内存地址，eg:AAAFFF000，js中没办法看到内存地址
// 基本数据类型是直接存的在栈里，引用数据类型把数据存在堆里，然后把地址存到栈里


// // 一个对象中属性名是不能重复的，属性名一般都是字符串，在对象里面 数字属性名 == 字符串属性名，a['0'] 和 a[0]  指的是一个属性值

// // (数组例外，数组是特殊对象，它的属性名是索引，而且是数字。也就是数组对象的属性名是数字)

// 延申：对象和数组的区别？
// //----------------------------------------
// // 问题2：
// //
// let a={}, b=Symbol('1'), c=Symbol('1');    //Symbol() 是创建唯一值的 ，Symbol('1') === Symbol('1'）  返回false 说明不相等
// a[b]='珠峰';
// a[c]='培训';  
// console.log(a[b]);  //珠峰

// // 在浏览器控制台 dir(对象a)  打印对象里的内容
// 这里打印对象a， 为{Symbol(1) :'珠峰',Symbol(1) :'培训'};   这里属性名 Symbol(1) 就不是字符串

// 延申：自己实现Symbol()
//--------------------------------
// 问题3
// 引用类型的值 做为属性名 都要变成字符串来存储 ，{n:'1'}.toString()  => [Object Object]
let a={}, b={n:'1'}, c={m:'2'};  
a[b]='珠峰';  //b是引用值要转为字符串，对象转字符串为[Object Object]  所以是 a[ [Object Object] ] ='珠峰'
a[c]='培训';  //a[ [Object Object] ] ='培训'  覆盖了原来的值
console.log(a[b]);   //培训

// 延申： Object.prototype.toString() 项目中的应用：怎么检测数据类型
// valueof  和 toString() 的区别--先执行valueof  再toString


// 一个对象的属性名可以不是字符串？
// 大部分是字符串，可以是数字(数组的索引就是数字)，也可以是symbol,或者布尔、null\undefined
// 但是数字的0  和 字符串的0 是同一个属性名

//-------------------------------
//题4

var test = (function(i){
    return function(){
        alert(i*=2);  // '4' 字符串4，alert 出的结果都是字符串，都要toString()处理的
    }
})(2);
test(5);